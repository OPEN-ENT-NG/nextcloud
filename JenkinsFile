#!/usr/bin/env groovy

pipeline {
  agent any
  stages {
    stage("Initialization") {
        steps {
            script {
                def version = sh(returnStdout: true, script: 'docker-compose run --rm maven mvn $MVN_OPTS help:evaluate -Dexpression=project.version -q -DforceStdout')
                buildName "${env.GIT_BRANCH.replace("origin/", "")}@${version}"
            }
        }
    }

    stage('Frontend React') {
      steps {
        dir('frontend') {
          sh 'chmod +x build.sh && ./build.sh installDeps build'
        }
      }
    }

    stage('Frontend Angular') {
      steps {
        dir('angularjs') {
          sh 'chmod +x build.sh && ./build.sh buildNode'
        }
      }
    }

    stage('Backend') {
      steps {
        dir('backend') {
          sh 'cp -R ../frontend/dist/* ./src/main/resources/'
          sh 'mkdir -p ./src/main/resources/view'
          sh 'mkdir -p ./src/main/resources/public/template'
          sh 'mkdir -p ./src/main/resources/public/img'
          sh 'mkdir -p ./src/main/resources/public/js'
          sh 'mv ./src/main/resources/*.html ./src/main/resources/view'
          sh 'cp -R ../angularjs/src/view/* ./src/main/resources/view'
          // sh 'cp -R ../angularjs/src/css/* ./src/main/resources/public'
          sh 'cp -R ../angularjs/src/dist/* ./src/main/resources/public/js'
          sh 'cp -R ../angularjs/src/template/* ./src/main/resources/public/template'
          // sh 'cp -R ../angularjs/src/img/* ./src/main/resources/public/img'
          // sh 'cp -R ../frontend/public/* ./src/main/resources/public'
          sh 'chmod +x build.sh && ./build.sh clean build publish'
          sh 'rm -rf ../frontend/dist'
          sh 'rm -rf ../angularjs/src/js'
          sh 'rm -rf ../angularjs/src/view'
          sh 'rm -rf ../angularjs/src/css'
          sh 'rm -rf ../angularjs/src/dist'
        }
      }
    }
}
